/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import DAO.Assignment;
import DAO.BusDAO;
import MODEL.AssignmentModel;
import MODEL.Bus;
import MODEL.Route;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Naome
 */
public class BusScheduling extends javax.swing.JInternalFrame {

    /**
     * Creates new form BusScheduling
     */ DefaultTableModel tableModel = new DefaultTableModel();
    public BusScheduling() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui=(BasicInternalFrameUI)this.getUI();
           ui.setNorthPane(null);
           populateTable();
           addTableColumn();
    }
     private void addTableColumn(){
        tableModel.addColumn("assign_id");
        tableModel.addColumn("plate_nbr");
        tableModel.addColumn("route_id");
        tableModel.addColumn("passengers");
      
       
         assignTABLE.setModel(tableModel);
     }
      public void populateTable(){
      tableModel.setRowCount(0);
          Assignment assigndao=new Assignment();
      
        List<AssignmentModel> assigned = assigndao.getAllAssignedBuses();
        for(AssignmentModel theassign:assigned){
          tableModel.addRow(new Object[]{
              theassign.getAssign_id(),
              theassign.getPlate_nbr(),
              theassign.getRoute_id(),
              theassign.getPassengers()
            });
        }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        plateBOX = new javax.swing.JTextField();
        routeBOX = new javax.swing.JTextField();
        passengerBOX = new javax.swing.JTextField();
        assignBTN = new javax.swing.JButton();
        viewBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        assignTABLE = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        idBOX = new javax.swing.JTextField();
        updateBTN = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(553, 398));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setText("PLATE NO");

        jLabel2.setText("ROUTE");

        jLabel3.setText("PASSENGERS");

        assignBTN.setText("ASSIGN");
        assignBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBTNActionPerformed(evt);
            }
        });

        viewBTN.setText("VIEW");
        viewBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBTNActionPerformed(evt);
            }
        });

        assignTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        assignTABLE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignTABLEMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(assignTABLE);

        jLabel4.setText("ID");

        updateBTN.setText("UPDATE");
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(plateBOX)
                                    .addComponent(routeBOX, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(passengerBOX, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(idBOX, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(assignBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viewBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(updateBTN))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(plateBOX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignBTN))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(routeBOX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewBTN))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passengerBOX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBTN))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(idBOX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void assignBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBTNActionPerformed
        if(routeBOX.getText().trim().isEmpty()||plateBOX.getText().trim().isEmpty()||passengerBOX.getText().trim().isEmpty()){
 JOptionPane.showMessageDialog(this, "all Field are required");
    }
        else{


AssignmentModel theassign = new AssignmentModel();
        Route theroute = new Route();
        Bus thebus = new Bus();
        theroute.setRoute_id(routeBOX.getText());
        thebus.setPlate_nbr(plateBOX.getText());
        theassign.setRoute_id(theroute);
        theassign.setPlate_nbr(thebus);

        // Retrieve available passenger  for the bus from the BusDAO
        BusDAO busDAO = new BusDAO();
        int availableCapacity = busDAO.getAvailablePassengerCapacity(thebus);

        // Check if entered passengers exceed available passengers i have in my bus table
        int enteredPassengers = Integer.parseInt(passengerBOX.getText());

        if (enteredPassengers <= availableCapacity) {
            theassign.setPassengers(enteredPassengers);
            Assignment assigndao = new Assignment();
            String message = assigndao.assingBus(theassign);
            JOptionPane.showMessageDialog(this, message);
            populateTable();
    }else{
        JOptionPane.showMessageDialog(this, "Passenger count exceeds available capacity for the bus");
        }
        
        }
    }//GEN-LAST:event_assignBTNActionPerformed

    private void viewBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBTNActionPerformed
    populateTable();
    }//GEN-LAST:event_viewBTNActionPerformed

    private void assignTABLEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignTABLEMouseClicked
       
        int row=assignTABLE.getSelectedRow();
        if(row<0){
            JOptionPane.showMessageDialog(this, "select record from this table to delete or to update");
        }else {
            String assign_id = assignTABLE.getValueAt(row, 0).toString();
            String plate_nbr = assignTABLE.getValueAt(row, 1).toString();
            String route_id =assignTABLE.getValueAt(row, 2).toString();
            String passenger= assignTABLE.getValueAt(row, 3).toString();
            idBOX.setText(assign_id);
            plateBOX.setText(plate_nbr);
            routeBOX.setText(route_id);
            passengerBOX.setText(passenger);
            }
        
    }//GEN-LAST:event_assignTABLEMouseClicked

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
          if(routeBOX.getText().trim().isEmpty()||plateBOX.getText().trim().isEmpty()||passengerBOX.getText().trim().isEmpty()){
 JOptionPane.showMessageDialog(this, "all Field are required");
    }else{
          int assign_id = Integer.parseInt(idBOX.getText());
            String plate_nbr = plateBOX.getText();
            String route_id = routeBOX.getText();
            int passengers = Integer.parseInt(passengerBOX.getText());
            AssignmentModel updatedAssignment = new AssignmentModel();
            updatedAssignment.setAssign_id(assign_id);
            Route route = new Route();
            route.setRoute_id(route_id);
            updatedAssignment.setRoute_id(route);
            Bus bus = new Bus();
            bus.setPlate_nbr(plate_nbr);
            updatedAssignment.setPlate_nbr(bus);
            updatedAssignment.setPassengers(passengers);
             Assignment assigndao = new Assignment();
            String message = assigndao.updateAssignment(updatedAssignment);
            JOptionPane.showMessageDialog(this, message);
            populateTable();
            
              
          }
    }//GEN-LAST:event_updateBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignBTN;
    private javax.swing.JTable assignTABLE;
    private javax.swing.JTextField idBOX;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField passengerBOX;
    private javax.swing.JTextField plateBOX;
    private javax.swing.JTextField routeBOX;
    private javax.swing.JButton updateBTN;
    private javax.swing.JButton viewBTN;
    // End of variables declaration//GEN-END:variables
}
